<%@ Page Title="Bloom & Grace | Cart" Language="C#" MasterPageFile="~/Site1.Master" AutoEventWireup="true" CodeBehind="Cart.aspx.cs" Inherits="Assg1.Cart" %>

<asp:Content ID="Content1" ContentPlaceHolderID="head" runat="server">
    <link href="~/css/StyleSheet2.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"/>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet"/>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet"/>
    <script>
        // JavaScript code here...
        const incrementValue = 1;

        function updateCart() {
            let totalItems = 0;
            let totalAmountToPay = 0;

            const cartItems = document.querySelectorAll('.cart-item');
            const previewContainer = document.getElementById('preview-container');
            previewContainer.innerHTML = '';
            let productSelected = false;

            cartItems.forEach(item => {
                const quantityInput = item.querySelector('.quantity');
                const quantity = parseInt(quantityInput.value) || 0;
                const price = parseFloat(item.querySelector('.price-value').innerText) || 0;
                const itemTotal = quantity * price;

                item.querySelector('.total-price').innerText = itemTotal.toFixed(2);

                const checkbox = item.querySelector('.select-item');
                if (checkbox.checked) {
                    totalAmountToPay += itemTotal;
                    totalItems += quantity;

                    const productName = item.querySelector('.product-name').innerText.trim();
                    const productImage = item.querySelector('.product-name img').src;
                    const productPreviewHTML = `
                        <div class="preview-item">
                            <div class="preview-item-content">
                                <img src="${productImage}" alt="${productName}" class="preview-item-image">
                                <div class="preview-item-details">
                                    <p><strong>Name:</strong> ${productName}</p>
                                    <p><strong>Price:</strong> RM ${itemTotal.toFixed(2)}</p>
                                </div>
                            </div>
                        </div>
                    `;
                    previewContainer.innerHTML += productPreviewHTML;
                }
            });

            if (previewContainer.innerHTML === '') {
                previewContainer.innerHTML = `<p>No product selected.</p>`;
            }

            document.getElementById('item-count').innerText = totalItems;
            document.getElementById('total-amount').innerText = totalAmountToPay.toFixed(2);
        }

        function increaseQuantity(shoppingcartbutton) {
            const quantityInput = shoppingcartbutton.previousElementSibling;
            let quantity = parseInt(quantityInput.value) || 0;
            quantity += incrementValue;
            quantityInput.value = quantity;
            updateCart();
        }

        function decreaseQuantity(shoppingcartbutton) {
            const quantityInput = shoppingcartbutton.nextElementSibling;
            let quantity = parseInt(quantityInput.value) || 0;
            if (quantity > 1) {
                quantity -= incrementValue;
                quantityInput.value = quantity;
                updateCart();
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            const today = new Date();
            const dd = String(today.getDate()).padStart(2, '0');
            const mm = String(today.getMonth() + 1).padStart(2, '0');
            const yyyy = today.getFullYear();
            const minDate = yyyy + '-' + mm + '-' + dd;

            const shoppingcartdateInput = document.getElementById('delivery-date');
            if (shoppingcartdateInput) {
                shoppingcartdateInput.setAttribute('min', minDate);
            }
        });

        function removeItem(cartId) {
            if (confirm('Are you sure you want to remove this item?')) {
                const xhr = new XMLHttpRequest();
                xhr.open('POST', 'Cart.aspx', true);
                xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                xhr.onload = function () {
                    if (xhr.status === 200) {
                        alert('Item removed from cart.');
                        location.reload();
                    } else {
                        alert('Error removing item from cart.');
                    }
                };
                xhr.send('cartId=' + cartId);
            }
        }
    </script>

    <style>
        /* CSS styles here... */
        .shoppingcart-body {
            font-family: sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }

        .shoppingcart-container {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            gap: 20px;
            margin: 20px auto;
            max-width: 1200px;
        }

        .shoppingcart-section, .shoppingcartdelivery-section {
            flex: 2;
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        }
        
        .cart-item {
     margin-bottom: 20px;
 }

 .product-name {
     font-weight: bold;
 }

 .tag {
     color: #888;
     font-size: 14px;
     margin-left: 10px;
 }

 .price {
     font-weight: bold;
     font-size: 18px;
 }

 table {
     width: 100%;
     border-collapse: collapse;
     margin-top: 20px;
     
 }

 th, td {
     text-align: left;
     padding: 12px; /* Increased padding for better readability */
     border-bottom: 1px solid #ddd;
 }

 th {
     background-color: #f2f2f2;
     font-weight: bold;
     border-bottom: 2px solid #55BC88;
 }

 td {
     vertical-align: middle; /* Ensures vertical alignment of content */
 }

 select, shoppingcartinput[type="checkbox"], shoppingcarttextarea, shoppingcartbutton, shoppingcart-input[type="text"], shoppingcartinput[type="date"] {
     width: 100%;
     margin-top: 5px;
     padding: 10px;
     border: 1px solid #ddd;
     border-radius: 5px;
 }
 .product-name {
     width: 40%; /* Increased width for the product name column */
 }

 .price, .total-price, .action {
     width: 15%; /* Reduced width for these columns */
 }


 .quantity-roller {
     display: flex;
     align-items: center;
     border: 1px solid #ccc;
     border-radius: 5px;
     background-color: #fff;
     padding: 5px;
 }

 .adjust-button {
     background-color: transparent;
     border: none;
     color: #007BFF;
     font-size: 20px;
     cursor: pointer;
     padding: 0 10px;
 }

 .adjust-button:hover {
     color: #0056b3;
 }

 .quantity {
     width: 40px;
     text-align: center;
     border: none;
     outline: none;
     font-size: 16px;
     color: #333;
 }

 .summary {
     margin-top: 20px;
     font-weight: bold;
     font-size: 18px;
 }

 .delivery-summary {
     margin-top: 40px;
     font-weight: bold;
     font-size: 18px;
     text-align: right;
 }

 label {
     display: block;
     margin-top: 10px;
     font-weight: bold;
 }

 shoppingcartbutton {
     background-color: #55BC88;
     color: white;
     border: none;
     margin-top: 20px;
     cursor: pointer;
     padding: 10px 20px;
     border-radius: 5px;
     text-align: center;
 }

 button:hover {
     background-color: #007BFF;
 }


     
.preview-item {
     display: flex;
     margin-bottom: 10px;
     align-items: center;
     border: 1px solid #ccc; /* Add border around the preview item */
     padding: 10px; /* Add padding inside the box */
     border-radius: 5px; /* Optional: rounded corners */
     background-color: #f9f9f9; /* Optional: background color for the box */
 }

 .preview-item-content {
     display: flex;
     align-items: center;
 }

 .preview-item-image {
     width: 100px;
     height: auto;
     margin-right: 15px; /* Space between image and text */
 }

 .preview-item-details {
     flex-grow: 1; /* Ensure the text takes the remaining space */
 }

 .preview-item-details p {
     margin: 5px 0;
 }
 .back-button 
 {
     margin: 20px 0;
     padding: 10px 20px;
     background-color: #00cc66;
     color: #fff;
     border: none;
     border-radius: 5px;
     cursor: pointer;
     font-size: 16px;
 }
 .back-button:hover 
 {
     background-color: #009973;
 }
    </style>
</asp:Content>

<asp:Content ID="Content2" ContentPlaceHolderID="ContentPlaceHolder1" runat="server">
    <form id="form1" runat="server">
        <div style="margin-bottom: 20px;">
            <asp:Button ID="BackButton" runat="server" Text="Back" CssClass="back-button" OnClick="BackButton_Click" />
        </div>
        <div class="shoppingcart-container">
            <div class="shoppingcart-section">
                <h1>Shopping Cart</h1>
                <table>
                    <thead>
                        <tr>
                            <th>Select</th>
                            <th>Product</th>
                            <th>Unit Price</th>
                            <th>Quantity</th>
                            <th>Total Price</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody class="cart-items">
                        <asp:Repeater ID="CartRepeater" runat="server">
                            <ItemTemplate>
                                <tr class="cart-item">
                                    <td><input type="checkbox" class="select-item" onchange="updateCart()"></td>
                                    <td class="product-name">
                                        <div style="display: flex; align-items: center;">
                                            <img src="<%# Eval("ImageURL") %>" alt="<%# Eval("ProductName") %>" style="width: 100px; height: auto; margin-right: 15px;">
                                            <div>
                                                <strong><%# Eval("ProductName") %></strong><br>
                                                <span style="font-size: 12px; color: #666;">Variation: <%# Eval("Color") %> <%# Eval("Size") %></span>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="price">RM <span class="price-value"><%# Eval("TotalPrice", "{0:0.00}") %></span></td>
                                    <td>
                                        <div class="quantity-roller">
                                            <button type="button" class="adjust-button" onclick="decreaseQuantity(this)">–</button>
                                            <input type="number" class="quantity" value="<%# Eval("Quantity") %>" min="1" oninput="updateCart()" />
                                            <button type="button" class="adjust-button" onclick="increaseQuantity(this)">+</button>
                                        </div>
                                    </td>
                                    <td>RM <span class="total-price"><%# Eval("DiscountPrice", "{0:0.00}") %></span></td>
                                    <td>
                                        <button type="button" class="btn btn-danger btn-sm" onclick="removeItem('<%# Eval("CartID") %>')">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                            </ItemTemplate>
                        </asp:Repeater>
                    </tbody>
                </table>
            </div>

            <div class="shoppingcartdelivery-section">
                <h3>Delivery Information</h3>
                <%--<asp:Label ID="lblMessage" runat="server" Text="Select a Delivery Destination:"></asp:Label>
                <asp:DropDownList ID="ddlDestination" runat="server" CssClass="destination-dropdown">
                    <asp:ListItem Text="Please Pick A Destination" Value="" />
                    <asp:ListItem Text="Kuala Lumpur" Value="Kuala Lumpur" />
                    <asp:ListItem Text="Selangor" Value="Selangor" />
                    <asp:ListItem Text="Penang" Value="Penang" />
                    <asp:ListItem Text="Johor" Value="Johor" />
                    <asp:ListItem Text="Kedah" Value="Kedah" />
                    <asp:ListItem Text="Kelantan" Value="Kelantan" />
                    <asp:ListItem Text="Melaka" Value="Melaka" />
                    <asp:ListItem Text="Negeri Sembilan" Value="Negeri Sembilan" />
                    <asp:ListItem Text="Pahang" Value="Pahang" />
                    <asp:ListItem Text="Perak" Value="Perak" />
                    <asp:ListItem Text="Perlis" Value="Perlis" />
                    <asp:ListItem Text="Terengganu" Value="Terengganu" />
                </asp:DropDownList>--%>

                <%--<asp:Label ID="lblDeliveryAddress" runat="server" Text="Delivery Address:"></asp:Label>
                <asp:TextBox ID="txtDeliveryAddress" runat="server" TextMode="MultiLine" Rows="4" CssClass="shoppingcarttextarea-delivery" placeholder="Enter delivery address here"></asp:TextBox>--%>

                <label for="delivery-date">Select Delivery Date:</label>
                <input type="date" id="delivery-date" />

                <label for="time-slot">Select Time Slot:</label>
                <select id="time-slot">
                    <option value="8am-12pm">8:00 AM - 12:00 PM</option>
                    <option value="1pm-4pm">1:00 PM - 4:00 PM</option>
                    <option value="4pm-8pm">4:00 PM - 8:00 PM</option>
                </select>

                <asp:Label ID="LblPM" runat="server" Text="Type Your Personal Message:"></asp:Label>
                <asp:TextBox ID="TxtboxDA" runat="server" TextMode="MultiLine" Rows="4" CssClass="shoppingcarttextarea-delivery textbox-sender" placeholder="Type your personal card message"></asp:TextBox>
                <br/>
                <br />
                <br />

                <asp:Label ID="LblSenderName" runat="server" Text="Type sender's name:"></asp:Label>
                <asp:TextBox ID="TxtboxSender" runat="server" placeholder="Enter your name here"></asp:TextBox>

                <div class="product-preview-box">
                    <h3>Selected Product</h3>
                    <div id="preview-container"><p>No product selected.</p></div>
                </div>

                <div class="delivery-summary">
                    <p>Total Items: <span id="item-count">0</span></p>
                    <p>Total Amount to Pay: RM <span id="total-amount">0</span></p>
                </div>
                <button type="button" id="continue" class="shoppingcartbutton">Checkout</button>
            </div>
        </div>
    </form>
</asp:Content>
